function write_cCond_mat_script(varargin)
    % WRITE_CCOND_MAT_SCRIPT Creates a MATLAB script for conditional statistics computation
    % 
    % Usage:
    %   write_cCond_mat_script() % Uses default parameters
    %   write_cCond_mat_script('FieldName', 'SYm_CH4', 'OutputDir', 'C_cond_fields_800')
    %   write_cCond_mat_script('ScriptName', 'custom_cond_stats.m', 'LESStart', 201, 'LESEnd', 1001)
    
    % Parse input arguments
    p = inputParser;
    % addParameter(p, 'ScriptName', 'Ccond_stats_computation.m', @ischar);
    addParameter(p, 'LESStart', 201, @isnumeric);
    addParameter(p, 'LESEnd', 1001, @isnumeric);
    addParameter(p, 'Yu', 0.222606, @isnumeric);
    addParameter(p, 'Yb', 0.0423208, @isnumeric);
    addParameter(p, 'delC', 0.0125, @isnumeric);
    addParameter(p, 'D', 2e-3, @isnumeric);
    addParameter(p, 'xlim_factor', 5, @isnumeric);
    addParameter(p, 'zlim_factor', 10, @isnumeric);
    addParameter(p, 'OutputDir', 'C_cond_fields_800', @ischar);
    addParameter(p, 'FieldName', 'SYm_CH4', @ischar);
    addParameter(p, 'WorkDir', '/work/home/anindya/Anindya_Cases/CH4_jet_PF/2025_Runs/LES_base_case_v6/Chem_src_term_computation', @ischar);
    addParameter(p, 'NumWorkers', 24, @isnumeric);
    
    parse(p, varargin{:});
    params = p.Results;
    params.ScriptName = sprintf('Ccond_stats_computation_%s.m', params.FieldName);
    
    % Create the script content following CFD codebase patterns
    script_content = sprintf(['clear all;\n' ...
        'clc;\n' ...
        '%%%% Inputs\n' ...
        '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n' ...
        'LES_start_idx = %d;    LES_end_idx = %d;\n' ...
        'Yu = %.6f; Yb = %.7f;\n' ...
        'Y = [Yu,Yb];\n' ...
        'delC = %.4f;  C = (0.0:2e-2:1.0)'';\n' ...
        'D = %.0e;   x_lim = %d*D;    z_lim = %d*D;\n' ...
        '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n' ...
        'opDirName = ''%s'';\n' ...
        'if ~isfolder(opDirName); mkdir(opDirName);end\n\n' ...
        'field_name =''%s'';\n' ...
        'wkdir = ''%s'';\n' ...
        'tic;\n' ...
        'parpool(''local'',%d)\n' ...
        '%% disp(gcp)\n' ...
        '%%%%\n' ...
        '[Na,Nc,R0,C_r,C_z] = getplanar_grid(wkdir,x_lim);\n' ...
        'z_axis = squeeze(C_z(floor(Nc(1)/2)+1,floor(Nc(2)/2)+1,:));\n' ...
        'z_lim_idx = find(z_axis > z_lim,1);\n' ...
        'C_r = C_r(:,:,1:z_lim_idx);C_z = C_z(:,:,1:z_lim_idx);\n' ...
        'Na(3) = z_lim_idx;Nc(3) = z_lim_idx;\n' ...
        '%%%%\n' ...
        '[Z,DF] = getplanar_cCond_Dist_O2_LES_parallel2(wkdir,field_name,D,Na,Nc,R0,C_r,C_z,LES_start_idx,LES_end_idx,Y,C,delC);\n' ...
        '[C_MAT,Z_MAT] = meshgrid(C,Z);\n' ...
        'DF = DF'';\n' ...
        '%%%%\n' ...
        'save(sprintf(''%%s/%%s.mat'',opDirName,field_name),"DF","C_MAT","Z_MAT","LES_start_idx","LES_end_idx");\n' ...
        'toc;\n'], ...
        params.LESStart, params.LESEnd, ...
        params.Yu, params.Yb, ...
        params.delC, ...
        params.D, params.xlim_factor, params.zlim_factor, ...
        params.OutputDir, ...
        params.FieldName, ...
        params.WorkDir, ...
        params.NumWorkers);
    
    % Write the script to file with error handling
    fid = fopen(params.ScriptName, 'w');
    if fid == -1
        error('Could not create script file: %s', params.ScriptName);
    end
    
    fprintf(fid, '%s', script_content);
    fclose(fid);
    
    fprintf('Conditional statistics script created: %s\n', params.ScriptName);
    fprintf('Field: %s | LES Range: %d-%d | Output: %s\n', ...
        params.FieldName, params.LESStart, params.LESEnd, params.OutputDir);
end